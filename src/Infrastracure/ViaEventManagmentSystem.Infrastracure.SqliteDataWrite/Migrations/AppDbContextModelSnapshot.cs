// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ViaEventManagmentSystem.Infrastracure.SqliteDataWrite;

#nullable disable

namespace ViaEventManagmentSystem.Infrastracure.SqliteDataWrite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ViaEventManagmentSystem.Core.Domain.Aggregates.Events.Entities.Invitation.Invitation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("_EventId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("_GuestId")
                        .HasColumnType("TEXT");

                    b.Property<int>("_InvitationStatus")
                        .HasColumnType("INTEGER")
                        .HasColumnName("_InvitationStatus");

                    b.HasKey("Id");

                    b.HasIndex("_EventId");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("ViaEventManagmentSystem.Core.Domain.Aggregates.Events.ViaEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("_Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("_EndDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("_EventStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("_EventTitle")
                        .HasColumnType("TEXT");

                    b.Property<string>("_EventVisibility")
                        .HasColumnType("TEXT");

                    b.Property<int?>("_MaxNumberOfGuests")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("_StartDateTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ViaEvents");
                });

            modelBuilder.Entity("ViaEventManagmentSystem.Core.Domain.Aggregates.Events.ViaGuest.GuestParticipation", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GuestId")
                        .HasColumnType("TEXT");

                    b.HasKey("EventId", "GuestId");

                    b.HasIndex("GuestId");

                    b.ToTable("GuestParticipation");
                });

            modelBuilder.Entity("ViaEventManagmentSystem.Core.Domain.Aggregates.Guests.Guest", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("_Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("_FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("_LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("ViaEventManagmentSystem.Core.Domain.Aggregates.Events.Entities.Invitation.Invitation", b =>
                {
                    b.HasOne("ViaEventManagmentSystem.Core.Domain.Aggregates.Events.ViaEvent", null)
                        .WithMany("_Invitations")
                        .HasForeignKey("_EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ViaEventManagmentSystem.Core.Domain.Aggregates.Events.ViaGuest.GuestParticipation", b =>
                {
                    b.HasOne("ViaEventManagmentSystem.Core.Domain.Aggregates.Events.ViaEvent", null)
                        .WithMany("_GuestsParticipants")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViaEventManagmentSystem.Core.Domain.Aggregates.Guests.Guest", null)
                        .WithMany()
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ViaEventManagmentSystem.Core.Domain.Aggregates.Events.ViaEvent", b =>
                {
                    b.Navigation("_GuestsParticipants");

                    b.Navigation("_Invitations");
                });
#pragma warning restore 612, 618
        }
    }
}
